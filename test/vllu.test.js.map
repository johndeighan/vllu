{
  "version": 3,
  "file": "vllu.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\vllu.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# vllu.test.coffee\n\nimport {\n\tundef, defined, notdefined, isString, isArray, isHash,\n\tkeys, isEmpty, nonEmpty, JS, escapeStr,\n\tindented, undented,\n\t} from '@jdeighan/vllu'\nimport test from 'ava'\n\n# ---------------------------------------------------------------------------\n\ntest \"line 12\", (t) =>\n\tt.is undef, undefined\n\tt.deepEqual undef, undefined\n\tt.truthy defined(23)\n\tt.falsy  defined(undef)\n\tt.falsy  defined(null)\n\tt.truthy notdefined(undef)\n\tt.truthy notdefined(null)\n\tt.truthy isString('abc')\n\tt.falsy  isString(42)\n\tt.truthy isArray([1,2])\n\tt.falsy  isArray('abc')\n\tt.deepEqual keys({a:1, b:2}), ['a','b']\n\ntest \"line 26\", (t) =>\n\tt.truthy isEmpty(undef)\n\ntest \"line 29\", (t) =>\n\tt.truthy isEmpty(null)\n\ntest \"line 32\", (t) =>\n\tt.truthy isEmpty('')\n\tt.truthy isEmpty([])\n\tt.truthy isEmpty({})\n\ntest \"line 37\", (t) =>\n\tt.truthy  isEmpty(undef)\n\tt.truthy  isEmpty(null)\n\ntest \"line 41\", (t) =>\n\tt.falsy  isEmpty('abc')\n\tt.falsy  isEmpty([1,2])\n\tt.falsy  isEmpty({a:1})\n\ntest \"line 46\", (t) =>\n\tt.falsy nonEmpty(undef)\n\tt.falsy nonEmpty(null)\n\tt.falsy nonEmpty('')\n\tt.falsy nonEmpty([])\n\tt.falsy nonEmpty({})\n\ntest \"line 53\", (t) =>\n\tt.falsy nonEmpty(undef)\n\tt.truthy nonEmpty('abc')\n\tt.truthy nonEmpty([1,2])\n\tt.truthy nonEmpty({a:1})\n\ntest \"line 59\", (t) =>\n\tt.is escapeStr(\"a\\n\\tb\"), \"a▼→b\"\n\ntest \"line 62\", (t) =>\n\tt.is indented('abc'), '\\tabc'\n\tt.is indented('abc', 2), '\\t\\tabc'\n\tt.is indented('abc', 1, '--'), '--abc'\n\tt.is indented('abc', 2, '--'), '----abc'\n\tt.is indented('abc\\ndef'), '\\tabc\\n\\tdef'\n\ntest \"line 69\", (t) =>\n\tt.deepEqual indented(['abc']), ['\\tabc']\n\tt.deepEqual indented(['abc'], 2), ['\\t\\tabc']\n\tt.deepEqual indented(['abc'], 1, '--'), ['--abc']\n\tt.deepEqual indented(['abc'], 2, '--'), ['----abc']\n\tt.deepEqual indented(['abc','def']), ['\\tabc','\\tdef']\n\ntest \"line 76\", (t) =>\n\tt.is undented('\\tabc'), 'abc'\n\tt.is undented('\\t\\tabc', 2), 'abc'\n\tt.is undented('  abc'), 'abc'\n\tt.is undented('abc\\ndef'), 'abc\\ndef'\n\tt.is undented('\\tabc\\n\\t\\tdef'), 'abc\\n\\tdef'\n\ntest \"line 83\", (t) =>\n\tt.deepEqual undented(['\\tabc']), ['abc']\n\tt.deepEqual undented(['\\t\\tabc']), ['abc']\n\tt.deepEqual undented(['  abc']), ['abc']\n\tt.deepEqual undented(['abc','def']), ['abc','def']\n\tt.deepEqual undented(['\\tabc','\\t\\tdef']), ['abc','\\tdef']\n"
  ]
}